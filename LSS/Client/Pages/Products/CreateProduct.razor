@page "/product/create"
@inject NavigationManager navigationManager
@inject IProductRepository productRepository
@inject ICategoryRepository categoryRepository

<h3>Create Product</h3>

@if (NotSelectedCategories != null)
{
	<ProductForm Product="Product"	
		OnValidSubmit="SaveProduct" 
		NotSelectedCategories="NotSelectedCategories" />
}


@code {

	private Product Product = new Product();

	protected async override Task OnInitializedAsync()
	{
		NotSelectedCategories = await categoryRepository.GetCategories();
	}
	private List<Category> NotSelectedCategories;

	private async Task SaveProduct()
	{
		try
		{
		// Redirect on Save
			var productId = await productRepository.CreateProduct(Product);
			navigationManager.NavigateTo($"product/{productId}/{Product.Title.Replace(" ", "-")}");
			//Console.WriteLine(navigationManager.Uri);
		}
		catch (Exception ex)
		{

		}
	}
}

