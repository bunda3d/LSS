@page "/login"
@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService

@using LSS.Client.Auth

<div class="form row my-4">
  <EditForm Model="userInfo" 
    OnValidSubmit="LoginUser" 
    class="col-xl-8" >
    <DataAnnotationsValidator />

    <h3>Login</h3>

    <div class="form-row no-gutters">
      <div class="form-group col-md-6 my-3">
        <div class="col-md-11 px-0">
          <label>Email:</label>
          <InputText class="form-control" @bind-Value="@userInfo.Email" />
          <!-- placeholder="you@who.com" -->
          <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
      </div>

      <div class="form-group col-md-6 my-3">
        <div class="col-md-11 offset-md-1 px-0">
          <label>Password:</label>
          <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
          <!-- placeholder="P@sSw0rd!" -->
          <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
      </div>
      <div class="form-group col-md-6 my-3">
        <button type="submit" class="btn btn-outline-primary">Login</button>
      </div>
    </div>
  </EditForm>
</div>



@code {
  private UserInfo userInfo = new UserInfo();

  private async Task LoginUser()
  {
    var userToken = await accountsRepository.Login(userInfo);
    await loginService.Login(userToken.Token);
    navigationManager.NavigateTo("");
  }

}
