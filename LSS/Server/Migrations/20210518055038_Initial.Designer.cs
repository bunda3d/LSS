// <auto-generated />
using System;
using LSS.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LSS.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210518055038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("LSS.Shared.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpYrsOfService")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("About");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorDyeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorHexCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorHsvCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorPantoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorUsedInProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasUsedInProductionFlag")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("LSS.Shared.Entities.PatternStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PatternStyleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternUsedInPoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternUsedInProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasUsedInProductionFlag")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PatternStyles");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameMI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysToManufacture")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DiscontinuedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMarkedDownFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("OnClearanceFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("PatternId")
                        .HasColumnType("int");

                    b.Property<string>("Poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("PriceUnformatted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SellStartDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("SizeMeasureId")
                        .HasColumnType("int");

                    b.Property<int?>("SizeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StarRatingId")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LSS.Shared.Entities.ProductsCategories", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductsCategories");
                });

            modelBuilder.Entity("LSS.Shared.Entities.SizeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SizeMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SizeUnits");
                });

            modelBuilder.Entity("LSS.Shared.Entities.StarRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StarRatingScoreAvg")
                        .HasPrecision(1, 1)
                        .HasColumnType("decimal(1,1)");

                    b.Property<int>("StarRatingScoreEvent")
                        .HasPrecision(1)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StarRatings");
                });

            modelBuilder.Entity("LSS.Shared.Entities.StarRatingsPeople", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("StarRatingId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "StarRatingId");

                    b.HasIndex("StarRatingId");

                    b.ToTable("StarRatingsPeople");
                });

            modelBuilder.Entity("LSS.Shared.Entities.StarRatingsProducts", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StarRatingId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "StarRatingId");

                    b.HasIndex("StarRatingId");

                    b.ToTable("StarRatingsProducts");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StyleAssociatedWith")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StyleIsTrendingFlag")
                        .HasColumnType("bit");

                    b.Property<string>("StyleIsTrendingReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleSimilarTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("PersonStarRating", b =>
                {
                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int>("StarRatingsId")
                        .HasColumnType("int");

                    b.HasKey("PeopleId", "StarRatingsId");

                    b.HasIndex("StarRatingsId");

                    b.ToTable("PersonStarRating");
                });

            modelBuilder.Entity("ProductStarRating", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("StarRatingsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "StarRatingsId");

                    b.HasIndex("StarRatingsId");

                    b.ToTable("ProductStarRating");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LSS.Shared.Entities.ProductsCategories", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Category", "Category")
                        .WithMany("ProductsCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.Product", "Product")
                        .WithMany("ProductsCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LSS.Shared.Entities.StarRatingsPeople", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.StarRating", "StarRating")
                        .WithMany()
                        .HasForeignKey("StarRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("StarRating");
                });

            modelBuilder.Entity("LSS.Shared.Entities.StarRatingsProducts", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.StarRating", "StarRating")
                        .WithMany()
                        .HasForeignKey("StarRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StarRating");
                });

            modelBuilder.Entity("PersonStarRating", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.StarRating", null)
                        .WithMany()
                        .HasForeignKey("StarRatingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductStarRating", b =>
                {
                    b.HasOne("LSS.Shared.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LSS.Shared.Entities.StarRating", null)
                        .WithMany()
                        .HasForeignKey("StarRatingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LSS.Shared.Entities.Category", b =>
                {
                    b.Navigation("ProductsCategories");
                });

            modelBuilder.Entity("LSS.Shared.Entities.Product", b =>
                {
                    b.Navigation("ProductsCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
